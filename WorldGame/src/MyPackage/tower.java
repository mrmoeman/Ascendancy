package MyPackage;

import org.lwjgl.opengl.GL11;

class tower {

static String TextureName = "tower.mtl";

static int Vertices = 112;

static int VertTexts = 252;

static int Normals = 252;

static int Faces = 84;

static int SmoothGroups = 2;

static float[][] VertArray = new float[][]{
{ 0.769092f, 0.000100002f, 0.424289f},
{ 0.769092f, 0.1001f, 0.424289f},
{ 0.769092f, 0.1001f, 0.274289f},
{ 0.769092f, 0.000100002f, 0.274289f},
{ 0.769092f, 0.1001f, 0.724289f},
{ 0.769092f, 0.000100002f, 0.724289f},
{ 0.769092f, 0.1001f, 0.574289f},
{ 0.769092f, 0.000100002f, 0.574289f},
{ 0.230908f, 0.000100002f, 0.424489f},
{ 0.230908f, 0.1001f, 0.424489f},
{ 0.230908f, 0.000100002f, 0.274489f},
{ 0.230908f, 0.1001f, 0.274489f},
{ 0.230908f, 0.000100002f, 0.724489f},
{ 0.230908f, 0.1001f, 0.724489f},
{ 0.230908f, 0.1001f, 0.574489f},
{ 0.230908f, 0.000100002f, 0.574489f},
{ 0.5749f, 0.1001f, 0.230297f},
{ 0.5749f, 0.2001f, 0.230297f},
{ 0.7249f, 0.1001f, 0.230297f},
{ 0.7249f, 0.2001f, 0.230297f},
{ 0.2749f, 0.1001f, 0.230297f},
{ 0.2749f, 0.2001f, 0.230297f},
{ 0.4249f, 0.2001f, 0.230297f},
{ 0.4249f, 0.1001f, 0.230297f},
{ 0.5751f, 0.000100002f, 0.768481f},
{ 0.5751f, 0.1001f, 0.768481f},
{ 0.7251f, 0.1001f, 0.768481f},
{ 0.7251f, 0.000100002f, 0.768481f},
{ 0.2751f, 0.1001f, 0.768481f},
{ 0.2751f, 0.000100002f, 0.768481f},
{ 0.4251f, 0.1001f, 0.768481f},
{ 0.4251f, 0.000100002f, 0.768481f},
{ 0.425f, 0f, 0.8f},
{ 0.425f, 0.1f, 0.8f},
{ 0.275f, 0f, 0.8f},
{ 0.275f, 0.1f, 0.8f},
{ 0.2f, 0.1f, 0.8f},
{ 0.575f, 0.1f, 0.8f},
{ 0.8f, 0.1f, 0.8f},
{ 0.725f, 0.1f, 0.8f},
{ 0.8f, 0f, 0.8f},
{ 0.725f, 0f, 0.8f},
{ 0.575f, 0f, 0.8f},
{ 0.2f, 0f, 0.8f},
{ 0.4251f, 0.000100002f, 0.768481f},
{ 0.4251f, 0.1001f, 0.768481f},
{ 0.2751f, 0.000100002f, 0.768481f},
{ 0.2751f, 0.1001f, 0.768481f},
{ 0.7251f, 0.000100002f, 0.768481f},
{ 0.7251f, 0.1001f, 0.768481f},
{ 0.5751f, 0.1001f, 0.768481f},
{ 0.5751f, 0.000100002f, 0.768481f},
{ 0.4249f, 0.000100002f, 0.230297f},
{ 0.4249f, 0.1001f, 0.230297f},
{ 0.2749f, 0.1001f, 0.230297f},
{ 0.2749f, 0.000100002f, 0.230297f},
{ 0.7249f, 0.1001f, 0.230297f},
{ 0.7249f, 0.000100002f, 0.230297f},
{ 0.5749f, 0.1001f, 0.230297f},
{ 0.5749f, 0.000100002f, 0.230297f},
{ 0.8f, 0f, 0.2f},
{ 0.425f, 0f, 0.198778f},
{ 0.275f, 0f, 0.198778f},
{ 0.2f, 0f, 0.2f},
{ 0.275f, 0.1f, 0.198778f},
{ 0.2f, 0.1f, 0.2f},
{ 0.425f, 0.1f, 0.198778f},
{ 0.8f, 0.1f, 0.2f},
{ 0.725f, 0.1f, 0.198778f},
{ 0.725f, 0f, 0.198778f},
{ 0.575f, 0.1f, 0.198778f},
{ 0.575f, 0f, 0.198778f},
{ 0.230908f, 0.000100002f, 0.574489f},
{ 0.230908f, 0.1001f, 0.574489f},
{ 0.230908f, 0.1001f, 0.724489f},
{ 0.230908f, 0.000100002f, 0.724489f},
{ 0.230908f, 0.1001f, 0.274489f},
{ 0.230908f, 0.000100002f, 0.274489f},
{ 0.230908f, 0.1001f, 0.424489f},
{ 0.230908f, 0.000100002f, 0.424489f},
{ 0.199389f, 0f, 0.574389f},
{ 0.199389f, 0f, 0.724389f},
{ 0.199389f, 0.1f, 0.724389f},
{ 0.199389f, 0.1f, 0.574389f},
{ 0.199389f, 0.1f, 0.274389f},
{ 0.199389f, 0f, 0.274389f},
{ 0.199389f, 0.1f, 0.424389f},
{ 0.199389f, 0f, 0.424389f},
{ 0.800611f, 0f, 0.574389f},
{ 0.800611f, 0.1f, 0.574389f},
{ 0.800611f, 0f, 0.724389f},
{ 0.800611f, 0.1f, 0.724389f},
{ 0.800611f, 0.1f, 0.424389f},
{ 0.800611f, 0.1f, 0.274389f},
{ 0.800611f, 0f, 0.274389f},
{ 0.800611f, 0f, 0.424389f},
{ 0.769092f, 0.000100002f, 0.574289f},
{ 0.769092f, 0.1001f, 0.574289f},
{ 0.769092f, 0.000100002f, 0.724289f},
{ 0.769092f, 0.1001f, 0.724289f},
{ 0.769092f, 0.000100002f, 0.274289f},
{ 0.769092f, 0.1001f, 0.274289f},
{ 0.769092f, 0.1001f, 0.424289f},
{ 0.769092f, 0.000100002f, 0.424289f},
{ 0.2f, 0.1f, 0.2f},
{ 0.8f, 0.1f, 0.2f},
{ 0.8f, 0.1f, 0.8f},
{ 0.2f, 0.1f, 0.8f},
{ 0.2f, 0.2f, 0.8f},
{ 0.8f, 0.2f, 0.8f},
{ 0.8f, 0.2f, 0.2f},
{ 0.2f, 0.2f, 0.2f}};

static float[][] TextArray = new float[][]{
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 0f},
{ 0f, 1f},
{ 1f, 0f},
{ 1f, 1f},
{ 1f, 0f},
{ 0f, 1f},
{ 0f, 0f},
{ 0f, 1f},
{ 1f, 0f},
{ 1f, 1f},
{ 1f, 0f},
{ 0f, 1f},
{ 0f, 0f},
{ 0f, 0f},
{ 1f, 1f},
{ 0f, 1f},
{ 1f, 1f},
{ 0f, 0f},
{ 1f, 0f},
{ 1f, 1f},
{ 0f, 0f},
{ 1f, 0f},
{ 0f, 0f},
{ 1f, 1f},
{ 0f, 1f},
{ 1f, 0f},
{ 0f, 1f},
{ 0f, 0f},
{ 0f, 1f},
{ 1f, 0f},
{ 1f, 1f},
{ 1f, 1f},
{ 0f, 0f},
{ 1f, 0f},
{ 0f, 0f},
{ 1f, 1f},
{ 0f, 1f}};

static float[][] NormArray = new float[][]{
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ -0.999995f, 0f, -0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ 0.999995f, 0f, 0.00317324f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ -0.00317324f, 0f, 0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0.00317324f, 0f, -0.999995f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0.0162908f, 0f, -0.999867f},
{ 0.0162908f, 0f, -0.999867f},
{ 0.0162908f, 0f, -0.999867f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ -0.0162908f, 0f, -0.999867f},
{ -0.0162908f, 0f, -0.999867f},
{ -0.0162908f, 0f, -0.999867f},
{ -0.0162908f, 0f, -0.999867f},
{ -0.0162908f, 0f, -0.999867f},
{ -0.0162908f, 0f, -0.999867f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0.0162908f, 0f, -0.999867f},
{ 0.0162908f, 0f, -0.999867f},
{ 0.0162908f, 0f, -0.999867f},
{ -0.999966f, 0f, -0.0082136f},
{ -0.999966f, 0f, -0.0082136f},
{ -0.999966f, 0f, -0.0082136f},
{ -1f, 0f, 1.98682e-007f},
{ -1f, 0f, 1.98682e-007f},
{ -1f, 0f, 1.98682e-007f},
{ -0.999967f, 0f, 0.00808046f},
{ -0.999967f, 0f, 0.00808046f},
{ -0.999967f, 0f, 0.00808046f},
{ -0.999967f, 0f, 0.00808046f},
{ -0.999967f, 0f, 0.00808046f},
{ -0.999967f, 0f, 0.00808046f},
{ -1f, 0f, 1.98682e-007f},
{ -1f, 0f, 1.98682e-007f},
{ -1f, 0f, 1.98682e-007f},
{ -0.999966f, 0f, -0.0082136f},
{ -0.999966f, 0f, -0.0082136f},
{ -0.999966f, 0f, -0.0082136f},
{ 0.999967f, 0f, 0.00807987f},
{ 0.999967f, 0f, 0.00807987f},
{ 0.999967f, 0f, 0.00807987f},
{ 1f, 0f, -3.97364e-007f},
{ 1f, 0f, -3.97364e-007f},
{ 1f, 0f, -3.97364e-007f},
{ 0.999966f, 0f, -0.0082118f},
{ 0.999966f, 0f, -0.0082118f},
{ 0.999966f, 0f, -0.0082118f},
{ 0.999966f, 0f, -0.0082118f},
{ 0.999966f, 0f, -0.0082118f},
{ 0.999966f, 0f, -0.0082118f},
{ 1f, 0f, -3.97364e-007f},
{ 1f, 0f, -3.97364e-007f},
{ 1f, 0f, -3.97364e-007f},
{ 0.999967f, 0f, 0.00807987f},
{ 0.999967f, 0f, 0.00807987f},
{ 0.999967f, 0f, 0.00807987f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ 1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ -1f, 0f, 0f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, -1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 0f, 1f},
{ 0f, 1f, 0f},
{ 0f, 1f, 0f},
{ 0f, 1f, 0f},
{ 0f, 1f, 0f},
{ 0f, 1f, 0f},
{ 0f, 1f, 0f},
{ 0f, -1f, 0f},
{ 0f, -1f, 0f},
{ 0f, -1f, 0f},
{ 0f, -1f, 0f},
{ 0f, -1f, 0f},
{ 0f, -1f, 0f}};

static int[][] FaceArray = new int[][]{
{ 2, 1, 1, 1, 2, 2, 4, 3, 3, 1},
{ 2, 4, 4, 4, 5, 5, 3, 6, 6, 1},
{ 7, 7, 7, 5, 8, 8, 6, 9, 9, 1},
{ 8, 10, 10, 7, 11, 11, 6, 12, 12, 1},
{ 9, 13, 13, 10, 14, 14, 11, 15, 15, 1},
{ 10, 16, 16, 12, 17, 17, 11, 18, 18, 1},
{ 15, 19, 19, 13, 20, 20, 14, 21, 21, 1},
{ 15, 22, 22, 16, 23, 23, 13, 24, 24, 1},
{ 17, 25, 25, 18, 26, 26, 19, 27, 27, 1},
{ 18, 28, 28, 20, 29, 29, 19, 30, 30, 1},
{ 23, 31, 31, 21, 32, 32, 22, 33, 33, 1},
{ 23, 34, 34, 24, 35, 35, 21, 36, 36, 1},
{ 26, 37, 37, 25, 38, 38, 28, 39, 39, 1},
{ 26, 40, 40, 28, 41, 41, 27, 42, 42, 1},
{ 31, 43, 43, 29, 44, 44, 30, 45, 45, 1},
{ 32, 46, 46, 31, 47, 47, 30, 48, 48, 1},
{ 34, 49, 49, 45, 50, 50, 33, 51, 51, 2},
{ 45, 52, 52, 34, 53, 53, 46, 54, 54, 2},
{ 47, 55, 55, 36, 56, 56, 35, 57, 57, 2},
{ 36, 58, 58, 47, 59, 59, 48, 60, 60, 2},
{ 40, 61, 61, 49, 62, 62, 42, 63, 63, 2},
{ 49, 64, 64, 40, 65, 65, 50, 66, 66, 2},
{ 52, 67, 67, 38, 68, 68, 43, 69, 69, 2},
{ 38, 70, 70, 52, 71, 71, 51, 72, 72, 2},
{ 53, 73, 73, 67, 74, 74, 62, 75, 75, 2},
{ 67, 76, 76, 53, 77, 77, 54, 78, 78, 2},
{ 65, 79, 79, 56, 80, 80, 63, 81, 81, 2},
{ 56, 82, 82, 65, 83, 83, 55, 84, 84, 2},
{ 58, 85, 85, 69, 86, 86, 70, 87, 87, 2},
{ 69, 88, 88, 58, 89, 89, 57, 90, 90, 2},
{ 71, 91, 91, 60, 92, 92, 72, 93, 93, 2},
{ 60, 94, 94, 71, 95, 95, 59, 96, 96, 2},
{ 73, 97, 97, 84, 98, 98, 81, 99, 99, 2},
{ 84, 100, 100, 73, 101, 101, 74, 102, 102, 2},
{ 75, 103, 103, 82, 104, 104, 83, 105, 105, 2},
{ 82, 106, 106, 75, 107, 107, 76, 108, 108, 2},
{ 78, 109, 109, 85, 110, 110, 86, 111, 111, 2},
{ 85, 112, 112, 78, 113, 113, 77, 114, 114, 2},
{ 79, 115, 115, 88, 116, 116, 87, 117, 117, 2},
{ 88, 118, 118, 79, 119, 119, 80, 120, 120, 2},
{ 89, 121, 121, 98, 122, 122, 97, 123, 123, 2},
{ 98, 124, 124, 89, 125, 125, 90, 126, 126, 2},
{ 92, 127, 127, 99, 128, 128, 100, 129, 129, 2},
{ 99, 130, 130, 92, 131, 131, 91, 132, 132, 2},
{ 95, 133, 133, 102, 134, 134, 101, 135, 135, 2},
{ 102, 136, 136, 95, 137, 137, 94, 138, 138, 2},
{ 93, 139, 139, 104, 140, 140, 103, 141, 141, 2},
{ 104, 142, 142, 93, 143, 143, 96, 144, 144, 2},
{ 35, 145, 145, 36, 146, 146, 37, 147, 147, 2},
{ 33, 148, 148, 38, 149, 149, 34, 150, 150, 2},
{ 39, 151, 151, 40, 152, 152, 41, 153, 153, 2},
{ 40, 154, 154, 42, 155, 155, 41, 156, 156, 2},
{ 33, 157, 157, 43, 158, 158, 38, 159, 159, 2},
{ 37, 160, 160, 44, 161, 161, 35, 162, 162, 2},
{ 68, 163, 163, 61, 164, 164, 70, 165, 165, 2},
{ 72, 166, 166, 62, 167, 167, 67, 168, 168, 2},
{ 65, 169, 169, 63, 170, 170, 64, 171, 171, 2},
{ 66, 172, 172, 65, 173, 173, 64, 174, 174, 2},
{ 72, 175, 175, 67, 176, 176, 71, 177, 177, 2},
{ 70, 178, 178, 69, 179, 179, 68, 180, 180, 2},
{ 66, 181, 181, 64, 182, 182, 86, 183, 183, 2},
{ 88, 184, 184, 81, 185, 185, 84, 186, 186, 2},
{ 83, 187, 187, 82, 188, 188, 44, 189, 189, 2},
{ 37, 190, 190, 83, 191, 191, 44, 192, 192, 2},
{ 88, 193, 193, 84, 194, 194, 87, 195, 195, 2},
{ 86, 196, 196, 85, 197, 197, 66, 198, 198, 2},
{ 91, 199, 199, 92, 200, 200, 39, 201, 201, 2},
{ 89, 202, 202, 93, 203, 203, 90, 204, 204, 2},
{ 68, 205, 205, 94, 206, 206, 61, 207, 207, 2},
{ 94, 208, 208, 95, 209, 209, 61, 210, 210, 2},
{ 89, 211, 211, 96, 212, 212, 93, 213, 213, 2},
{ 39, 214, 214, 41, 215, 215, 91, 216, 216, 2},
{ 111, 217, 217, 107, 218, 218, 106, 219, 219, 2},
{ 107, 220, 220, 111, 221, 221, 110, 222, 222, 2},
{ 109, 223, 223, 105, 224, 224, 108, 225, 225, 2},
{ 105, 226, 226, 109, 227, 227, 112, 228, 228, 2},
{ 111, 229, 229, 105, 230, 230, 112, 231, 231, 2},
{ 105, 232, 232, 111, 233, 233, 106, 234, 234, 2},
{ 107, 235, 235, 109, 236, 236, 108, 237, 237, 2},
{ 109, 238, 238, 107, 239, 239, 110, 240, 240, 2},
{ 109, 241, 241, 111, 242, 242, 112, 243, 243, 2},
{ 111, 244, 244, 109, 245, 245, 110, 246, 246, 2},
{ 107, 247, 247, 105, 248, 248, 106, 249, 249, 2},
{ 105, 250, 250, 107, 251, 251, 108, 252, 252, 2}};

static int Temp = 0;

public static void Draw(float Height){
	
	for(int i = 0; i < Faces; i++ ){
		for (int p = 0; p < 4; p++){
			
		if (GetFaceData(i, 9) == 1){
			GL11.glColor3f(0.0f, 0.0f, 0.5f);		//windows YOLO
		}
		if (GetFaceData(i, 9) == 2){
			GL11.glColor3f(0.29f, 0.33f, 0.35f);		//tower YOLO
		}
		
        GL11.glBegin(GL11.GL_TRIANGLES);                    // Drawing Using Triangles
        
        Temp = GetFaceData(i, 2)-1;
        	GL11.glNormal3f( GetNormalData(Temp, 0), GetNormalData(Temp, 1), GetNormalData(Temp, 2));         
        Temp = GetFaceData(i, 0)-1;
            GL11.glVertex3f( GetVerticeData(Temp, 0), GetVerticeData(Temp, 1) + Height + p *0.2f, GetVerticeData(Temp, 2));         
            
        Temp = GetFaceData(i, 5)-1;
        	GL11.glNormal3f( GetNormalData(Temp, 0), GetNormalData(Temp, 1), GetNormalData(Temp, 2));   
        Temp = GetFaceData(i, 3)-1;
        GL11.glVertex3f( GetVerticeData(Temp, 0), GetVerticeData(Temp, 1) + Height + p *0.2f, GetVerticeData(Temp, 2));        
        
        Temp = GetFaceData(i, 8)-1;
    		GL11.glNormal3f( GetNormalData(Temp, 0), GetNormalData(Temp, 1), GetNormalData(Temp, 2));   
        Temp = GetFaceData(i, 6)-1;
            GL11.glVertex3f( GetVerticeData(Temp, 0), GetVerticeData(Temp, 1) + Height + p *0.2f, GetVerticeData(Temp, 2));         
        GL11.glEnd();   
		}
        }

}

public static int GetVertices() {
return Vertices;
}

public static int GetVertTexts() {
return VertTexts;
}

public static int GetNormals() {
return Normals;
}

public static int GetFaces() {
return Faces;
}

public static int GetSmoothGroups() {
return SmoothGroups;
}

public static Float GetVerticeData(int i, int d) {
return VertArray[i][d];
}

public static Float GetVerticeTextureData(int i, int d) {
return TextArray[i][d];
}

public static Float GetNormalData(int i, int d) {
return NormArray[i][d];
}

public static int GetFaceData(int i, int d) {
return FaceArray[i][d];
}


}

//Vertices: 112  Texture Co-ords: 252  Normals: 252  Texture: tower.mtl Faces: 84 Smooth Groups: 2